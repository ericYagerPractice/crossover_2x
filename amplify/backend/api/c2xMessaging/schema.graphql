type User @model 
{
  id: ID!
  email: String!
  cognitoID: String!
  lastLogin: String!
}

type Conversation @model
{
  id: ID!
  participants: [User]! 
  messages: [Message]! @connection(keyName: "byConversationID", fields: ["id"])
  originationDate: AWSDateTime
}

type Message  @model
@key(name: "byConversationID", fields: ["conversationID"]) 
{
  id: ID!
  author: String!
  recipient: String!
  messageText: String!
  time: AWSDateTime!
  conversationID: ID!
}

type learningPathway @model 
{
  id: ID!
  title: String!
  pods: [PathwayPod] @connection(name: "pathwayToPod")
  facilitator: User!
}

type Pod @model
{
  id: ID!
  creator: User!
  title: String!
  description: String!
  resourceUrls: [String!]
  createDate: AWSDateTime!
  learningPathway: [PathwayPod] @connection(name: "podToPathway")
}

type PathwayPod @model
{
  id: ID!
  createdAt: AWSDateTime!
  pathway: learningPathway @connection(name: "pathwayToPod")
  pod: Pod @connection(name: "podToPathway", sortField: "updatedAt")
}

type PodComments @model
{
  id: ID!
  podID: Pod!
  author: String!
  commentText: String!
}
